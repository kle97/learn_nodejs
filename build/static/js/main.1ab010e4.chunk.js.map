{"version":3,"sources":["Notes.js","Notification.js","services/Footer.js","services/notes.js","services/login.js","App.js","index.js"],"names":["Notes","note","toggleImportance","deleteFunc","label","important","className","content","onClick","value","Notification","message","Footer","style","color","fontStyle","fontSize","token","getAll","a","axios","get","response","data","create","newObject","config","headers","Authorization","post","update","id","put","remove","delete","setToken","newToken","login","credentials","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","username","setUsername","password","setPassword","user","setUser","addNote","event","preventDefault","noteObject","Math","random","noteService","then","returnedNote","concat","handleNoteChange","console","log","target","notesToShow","filter","useEffect","initialNotes","loggedUserJSON","window","localStorage","getItem","JSON","parse","toggleImportanceOf","changedNote","map","current","catch","error","toJSON","status","setTimeout","deleteNotes","confirm","index","findIndex","handleLogin","loginService","setItem","stringify","onSubmit","type","name","onChange","removeItem","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ab010e4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Notes = ({note, toggleImportance, deleteFunc}) => {\r\n    const label = note.important ? 'make not important' : 'make important'\r\n    return (\r\n        <li className={'note'}>{note.content}\r\n            <button onClick={toggleImportance}>{label}</button>\r\n            <button value={note.content} onClick={deleteFunc}>delete</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Notes","import React from \"react\";\r\n\r\nconst Notification = ({message}) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"error\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n    const footerStyle = {\r\n        color: 'green',\r\n        fontStyle: 'italic',\r\n        fontSize: 16\r\n    }\r\n    return (\r\n        <div style={footerStyle}>\r\n            <br/>\r\n            <em>Note app, Department of Computer Science, University of Helsinki 2020</em>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/notes'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n    token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = async () => {\r\n    const response = await axios.get(baseUrl)\r\n    return response.data\r\n}\r\n\r\nconst create = async newObject => {\r\n    const config = {\r\n        headers: { Authorization: token },\r\n    }\r\n\r\n    return await axios.post(baseUrl, newObject, config)\r\n}\r\n\r\nconst update = async (id, newObject) => {\r\n    const config = {\r\n        headers: { Authorization: token },\r\n    }\r\n\r\n    return await axios.put(`${baseUrl}/${id}`, newObject, config)\r\n}\r\n\r\nconst remove = async (id) =>{\r\n    const config = {\r\n        headers: { Authorization: token },\r\n    }\r\n\r\n    return await axios.delete(`${baseUrl}/${id}`, config)\r\n}\r\n\r\nexport default {getAll, create, update, remove, setToken}","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n    const response = await axios.post(baseUrl, credentials)\r\n    return response.data\r\n}\r\n\r\nexport default { login }","import React, {useEffect, useState} from 'react'\nimport Notes from './Notes'\nimport Notification from \"./Notification\"\nimport Footer from \"./services/Footer\"\nimport noteService from './services/notes'\nimport loginService from \"./services/login\"\n\nconst App = () => {\n    const [notes, setNotes] = useState([])\n    const [newNote, setNewNote] = useState('')\n    const [showAll, setShowAll] = useState(true)\n    const [errorMessage, setErrorMessage] = useState(null)\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [user, setUser] = useState(null)\n\n    const addNote = (event) => {\n        event.preventDefault()\n        const noteObject = {\n            content: newNote,\n            important: Math.random() < 0.5,\n        }\n\n        noteService.create(noteObject).then(returnedNote => {\n            setNotes(notes.concat(returnedNote))\n            setNewNote('')\n        })\n    }\n\n    const handleNoteChange = (event) => {\n        console.log(event.target.value)\n        setNewNote(event.target.value)\n    }\n\n    const notesToShow = showAll\n        ? notes\n        : notes.filter(note => note.important)\n\n    useEffect(() => {\n        noteService.getAll().then(initialNotes => {\n            setNotes(initialNotes)\n        })\n    }, [])\n\n    useEffect(() => {\n        const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\n        if (loggedUserJSON) {\n            const user = JSON.parse(loggedUserJSON)\n            setUser(user)\n            noteService.setToken(user.token)\n        }\n    }, [])\n\n    // console.log('render', notes.length, 'notes');\n\n    const toggleImportanceOf = (note) => () => {\n        const changedNote = {...note, important: !note.important}\n\n        noteService.update(note.id, changedNote)\n            .then(returnedNote => {\n                setNotes(notes.map(current => note.id !== current.id ? current : returnedNote))\n            })\n            .catch(error => {\n                // setErrorMessage(`Note '${note.content}' was already removed from server`)\n                setErrorMessage('401 Unauthorized')\n                console.log(error.message, '-----front end')\n                console.log(error)\n                console.log(error.response)\n                console.log(error.response.toJSON())\n                console.log(error.response.data)\n                console.log(error.response.status)\n                console.log(error.response.headers)\n                setTimeout(() => {\n                    setErrorMessage(null)\n                }, 5000)\n            })\n    }\n\n    const deleteNotes = (event) => {\n        if (window.confirm(\"Delete \" + event.target.value + \"?\")) {\n            const index = notes.findIndex(current => current.content === event.target.value)\n            const id = notes[index].id\n            noteService.remove(id)\n                .then(() => {\n                    setNotes(notes.filter(current => current.id !== id))\n                })\n                .catch(error => {\n                    // setErrorMessage(`Note '${event.target.value}' was already removed from server`)\n                    setErrorMessage('401 Unauthorized')\n                    console.log(error.message, '-----front end')\n                    console.log(error)\n                    console.log(error.response)\n                    console.log(error.response.toJSON())\n                    console.log(error.response.data)\n                    console.log(error.response.status)\n                    console.log(error.response.headers)\n                    setTimeout(() => {\n                        setErrorMessage(null)\n                    }, 5000)\n                })\n        }\n    }\n\n    const handleLogin = async (event) => {\n        event.preventDefault()\n\n        try {\n            const user = await loginService.login({\n                username, password,\n            })\n            window.localStorage.setItem(\n                'loggedNoteappUser', JSON.stringify(user)\n            )\n            noteService.setToken(user.token)\n            setUser(user)\n            setUsername('')\n            setPassword('')\n        } catch (exception) {\n            setErrorMessage('Wrong credentials')\n            setTimeout(() => {\n                setErrorMessage(null)\n            }, 5000)\n        }\n    }\n\n    const handleLogout = () => {\n        window.localStorage.removeItem('loggedNoteappUser')\n        noteService.setToken('')\n        setUser(null)\n    }\n\n    const loginForm = () => (\n        <form onSubmit={handleLogin}>\n            <div>\n                username\n                <input type=\"text\" value={username} name=\"Username\" onChange={({target}) => setUsername(target.value)}/>\n            </div>\n\n            <div>\n                password\n                <input type=\"password\" value={password} name=\"Password\"\n                       onChange={({target}) => setPassword(target.value)}/>\n            </div>\n\n            <button type=\"submit\">login</button>\n        </form>\n    )\n\n    const noteForm = () => (\n        <form onSubmit={addNote}>\n            <input value={newNote} onChange={handleNoteChange}/>\n            <button type=\"submit\">save</button>\n        </form>\n    )\n\n    return (\n        <div>\n            <h1>Notes</h1>\n            <Notification message={errorMessage}/>\n\n            {user === null ?\n                loginForm() :\n                <div>\n                    <p>{user.name} logged-in</p>\n                    {noteForm()}\n                    <button onClick={handleLogout}>\n                        log out\n                    </button>\n                </div>\n            }\n\n            <div>\n                <button onClick={() => setShowAll(!showAll)}>\n                    show {showAll ? 'important' : 'all'}\n                </button>\n            </div>\n\n            <ul>\n                {notesToShow.map(note => <Notes\n                    key={note.id}\n                    note={note}\n                    toggleImportance={toggleImportanceOf(note)}\n                    deleteFunc={deleteNotes}/>)}\n            </ul>\n\n            <Footer/>\n        </div>\n    )\n}\n\nexport default App;\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n    <App/>,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}